#!/bin/bash

### BEGIN INIT INFO
# Provides:          @project-name@
# Required-Start:    $network $syslog
# Required-Stop:     $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Access Point Binder
# Description:       Access Point Binder, part of Eltex SoftWLC
### END INIT INFO

set -e

NAME=@project-name@

# defaults
PORT=8092
ACCEPT_QUEUE_SIZE=0
JAVA=/usr/bin/java
JAVA_INIT_HEAP=64m
JAVA_MAX_HEAP=2048m
MAX_TEXT_MESSAGE_BUFFER_SIZE=262144

if [ -f /etc/default/$NAME ]; then
    . /etc/default/$NAME
fi

HOME="/usr/share/$NAME"
JAR_FILE="eltex-sta-collector-exec.jar"
#JVM_OPTS="$JAVA_OPTS -Xms$JAVA_INIT_HEAP -Xmx$JAVA_MAX_HEAP -Dlog4j.configurationFile=file:/etc/$NAME/log4j2.xml -Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.Slf4jLog"
JVM_OPTS="$JAVA_OPTS -Xms$JAVA_INIT_HEAP -Xmx$JAVA_MAX_HEAP"
JAVA_ARGS="$JVM_OPTS -jar $JAR_FILE"
PIDFILE="/var/run/$NAME.pid"
USER="stacollector"

if [ ! -e "$JAVA" ]; then
    >&2 echo "Java home not found. Please install JRE or JDK"
    exit 1
fi

start() {
    start-stop-daemon --start -b -c $USER -d $HOME -m -p $PIDFILE -x $JAVA -- $JAVA_ARGS

    case $? in
        0)
            echo "$NAME starting"
            ;;
        1)
            echo "$NAME already started"
            exit 3
            ;;
        *)
            echo "$NAME starting ERROR"
            exit 1
            ;;
    esac

    TIMER=10
    #sleep 10
    for i in $(seq 0 $TIMER); do
        sleep 1
        echo -n ".."
    done


    RET_COUNT=3
    RET=-1
    for i in $(seq 0 $RET_COUNT); do
        if start-stop-daemon --status -p $PIDFILE > /dev/null ; then
                RET=0
                echo "Service $NAME started"
                exit 0
        else
                echo -n ".."
                sleep 1
        fi

    done
    unset i

    echo "Service $NAME is not started! Look at error.log"
    exit 2

}

status() {
    if start-stop-daemon --status -p $PIDFILE > /dev/null ; then
        echo "$NAME running with pid `cat $PIDFILE`"
        return 0
    else
        echo "$NAME is not running"
        return 1
    fi
}

stop() {
    if start-stop-daemon --status -p $PIDFILE > /dev/null ; then
        echo "Stopping $NAME ..."
        if start-stop-daemon --stop -p $PIDFILE -u $USER --retry=TERM/30/KILL/5; then
            echo "$NAME stopped"
        fi
    else
        echo "$NAME is not running"
    fi
    rm $PIDFILE
}

case $1 in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        start
    ;;
    status)
        status
    ;;
    *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}" >&2
        exit 1
    ;;
esac
